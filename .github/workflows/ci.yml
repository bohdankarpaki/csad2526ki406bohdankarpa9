name: CI Build and Test

on:
  push:
    branches: [ master, develop , 'feature/**']
  pull_request:
    branches: [ master, develop ]

jobs:
  build_and_test:
    name: Build & Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # (Рекомендовано) Дозволяє всім збіркам завершитись, навіть якщо одна впаде
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Test
        shell: bash
        run: |
          mkdir -p build
          cd build
          
          # Готуємо аргументи для CMake
          CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Release"

          if [[ "${{ runner.os }}" == "Windows" ]]; then
            # На Windows: Використовуємо генератор VS за замовчуванням + прапор 32-bit
            echo "Windows detected. Configuring for 32-bit (Win32)."
            CMAKE_ARGS="$CMAKE_ARGS -A Win32"
          else
            # На Linux/macOS: Використовуємо Ninja
            echo "${{ runner.os }} detected. Configuring with Ninja generator."
            
            # ОНОВЛЕНО: Лапки навколо Ninja прибрані
            # Було: CMAKE_ARGS="$CMAKE_ARGS -G \"Ninja\""
            CMAKE_ARGS="$CMAKE_ARGS -G Ninja"
          fi
          
          # Запускаємо CMake з правильними аргументами
          cmake .. $CMAKE_ARGS
          
          # Збираємо проєкт
          cmake --build .
          
          # Запускаємо тести
          ctest --output-on-failure

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-results-${{ matrix.os }}
          path: build/